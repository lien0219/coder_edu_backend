basePath: /api
definitions:
  controller.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controller.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
      role:
        enum:
        - student
        - teacher
        - admin
        type: string
    required:
    - email
    - name
    - password
    - role
    type: object
  controller.UpdateUserRequest:
    properties:
      disabled:
        type: boolean
      email:
        type: string
      language:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        enum:
        - student
        - teacher
        - admin
        type: string
    required:
    - email
    - name
    - role
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.CProgrammingResource:
    properties:
      createdAt:
        type: string
      description:
        type: string
      enabled:
        type: boolean
      iconURL:
        type: string
      id:
        type: integer
      name:
        type: string
      order:
        type: integer
      updatedAt:
        type: string
    type: object
  model.ExerciseCategory:
    properties:
      cprogrammingResID:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      order:
        type: integer
      updatedAt:
        type: string
    type: object
  model.ExerciseQuestion:
    properties:
      categoryID:
        type: integer
      correctAnswer:
        description: 存储正确答案
        type: string
      createdAt:
        type: string
      description:
        type: string
      difficulty:
        description: easy, medium, hard
        type: string
      hint:
        type: string
      id:
        type: integer
      options:
        description: 存储选择题选项
        items:
          type: integer
        type: array
      points:
        description: 完成此题可获得的积分
        type: integer
      questionType:
        description: programming, multiple_choice, single_choice
        type: string
      solutionCode:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  model.Motivation:
    properties:
      content:
        type: string
      created_at:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      is_currently_used:
        type: boolean
      is_enabled:
        type: boolean
      last_used_at:
        type: string
      updated_at:
        type: string
      updatedAt:
        type: string
    type: object
  model.Resource:
    properties:
      createdAt:
        type: string
      description:
        type: string
      duration:
        description: 视频时长（秒）
        type: number
      format:
        description: 视频格式
        type: string
      id:
        type: integer
      moduleID:
        type: integer
      moduleType:
        type: string
      points:
        description: 完成此资源可获得的积分
        type: integer
      size:
        description: 文件大小（字节）
        type: integer
      thumbnail:
        description: 缩略图URL
        type: string
      title:
        type: string
      type:
        $ref: '#/definitions/model.ResourceType'
      updatedAt:
        type: string
      uploaderID:
        type: integer
      url:
        type: string
      viewCount:
        type: integer
    type: object
  model.ResourceType:
    enum:
    - pdf
    - video
    - article
    - worksheet
    type: string
    x-enum-varnames:
    - PDF
    - Video
    - Article
    - Worksheet
  model.User:
    properties:
      createdAt:
        type: string
      disabled:
        type: boolean
      email:
        type: string
      id:
        type: integer
      language:
        type: string
      lastLogin:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/model.UserRole'
      updatedAt:
        type: string
      xp:
        type: integer
    type: object
  model.UserRole:
    enum:
    - student
    - teacher
    - admin
    type: string
    x-enum-varnames:
    - Student
    - Teacher
    - Admin
  service.AnswerRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  service.GoalRequest:
    properties:
      description:
        type: string
      targetValue:
        type: integer
      title:
        type: string
    required:
    - targetValue
    - title
    type: object
  service.LearningLogRequest:
    properties:
      challenges:
        items:
          type: string
        type: array
      content:
        type: string
      insights:
        items:
          type: string
        type: array
      nextSteps:
        items:
          type: string
        type: array
      tags:
        items:
          type: string
        type: array
    required:
    - content
    type: object
  service.PostRequest:
    properties:
      content:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - content
    - title
    type: object
  service.QuestionRequest:
    properties:
      content:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - content
    - title
    type: object
  service.QuizSubmission:
    properties:
      answers:
        additionalProperties:
          type: integer
        description: questionID -> answerIndex
        type: object
    type: object
  service.SubmitExerciseAnswerRequest:
    properties:
      answer:
        type: string
      user_id:
        type: integer
    required:
    - answer
    - user_id
    type: object
  util.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API支持
    url: http://www.swagger.io/support
  description: CoderEdu学习平台的后端服务器。
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: CoderEdu 后端 API
  version: "1.0"
paths:
  /api/achievements:
    get:
      consumes:
      - application/json
      description: 获取用户的成就、徽章和积分
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取用户成就
      tags:
      - 成就系统
  /api/achievements/goals:
    get:
      consumes:
      - application/json
      description: 获取用户的学习目标
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取用户目标
      tags:
      - 成就系统
    post:
      consumes:
      - application/json
      description: 创建新的学习目标
      parameters:
      - description: 目标信息
        in: body
        name: goal
        required: true
        schema:
          $ref: '#/definitions/service.GoalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 创建学习目标
      tags:
      - 成就系统
  /api/achievements/goals/{goalId}:
    patch:
      consumes:
      - application/json
      description: 更新学习目标的进度
      parameters:
      - description: 目标ID
        in: path
        name: goalId
        required: true
        type: integer
      - description: 进度百分比
        in: body
        maximum: 100
        minimum: 0
        name: progress
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 更新目标进度
      tags:
      - 成就系统
  /api/achievements/leaderboard:
    get:
      consumes:
      - application/json
      description: 获取用户积分排行榜
      parameters:
      - default: 10
        description: 返回数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取排行榜
      tags:
      - 成就系统
  /api/admin/{itemType}/{itemId}:
    delete:
      consumes:
      - application/json
      description: 删除视频、文章、练习题类目或题目
      parameters:
      - description: 内容类型(videos/articles/exercise-categories/questions)
        in: path
        name: itemType
        required: true
        type: string
      - description: 内容项ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 删除资源分类内容项
      tags:
      - C语言编程资源
  /api/admin/articles/{id}:
    put:
      consumes:
      - application/json
      description: 更新指定ID的文章内容信息
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      - description: 要更新的文章数据（JSON格式）
        in: body
        name: body
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新文章内容（仅管理员）
      tags:
      - C语言编程资源
  /api/admin/c-programming/categories/{categoryId}/questions:
    post:
      consumes:
      - application/json
      description: 为指定练习题分类创建新的练习题题目（需要管理员权限）
      parameters:
      - description: 分类ID
        in: path
        name: categoryId
        required: true
        type: integer
      - description: 练习题题目信息
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/model.ExerciseQuestion'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 创建练习题题目
      tags:
      - C语言编程资源
  /api/admin/c-programming/categories/{categoryId}/questions/all:
    get:
      consumes:
      - application/json
      description: 管理员获取指定练习题分类下的所有题目（不需要分页）
      parameters:
      - description: 分类ID
        in: path
        name: categoryId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 管理员获取指定分类下的所有练习题题目
      tags:
      - C语言编程资源
  /api/admin/c-programming/resources:
    get:
      consumes:
      - application/json
      description: 管理员获取所有C语言资源分类列表，支持搜索、分页、筛选和排序
      parameters:
      - default: 1
        description: 页码，从1开始
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页记录数
        in: query
        name: limit
        type: integer
      - description: 搜索关键词，匹配名称或描述
        in: query
        name: search
        type: string
      - description: 过滤启用/禁用的资源
        in: query
        name: enabled
        type: boolean
      - default: order
        description: 排序字段：name, order, createdAt, updatedAt
        in: query
        name: sortBy
        type: string
      - default: asc
        description: 排序方向：asc(升序), desc(降序)
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 管理员获取所有C语言资源分类列表（支持搜索和分页）
      tags:
      - C语言编程资源
    post:
      consumes:
      - application/json
      description: 创建新的C语言资源分类模块（需要管理员权限）
      parameters:
      - description: C语言资源分类信息
        in: body
        name: resource
        required: true
        schema:
          $ref: '#/definitions/model.CProgrammingResource'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 创建C语言资源分类
      tags:
      - C语言编程资源
  /api/admin/c-programming/resources/{id}:
    delete:
      consumes:
      - application/json
      description: 删除C语言资源分类模块（需要管理员权限）
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 删除C语言资源分类
      tags:
      - C语言编程资源
    put:
      consumes:
      - application/json
      description: 更新C语言资源分类模块（需要管理员权限）
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      - description: C语言资源分类更新信息
        in: body
        name: resource
        required: true
        schema:
          $ref: '#/definitions/model.CProgrammingResource'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 更新C语言资源分类
      tags:
      - C语言编程资源
  /api/admin/c-programming/resources/{id}/categories:
    post:
      consumes:
      - application/json
      description: 为指定C语言资源创建新的练习题分类（需要管理员权限）
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      - description: 练习题分类信息
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/model.ExerciseCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 创建练习题分类
      tags:
      - C语言编程资源
  /api/admin/exercise-categories/{id}:
    put:
      consumes:
      - application/json
      description: 更新指定ID的练习分类信息
      parameters:
      - description: 练习分类ID
        in: path
        name: id
        required: true
        type: integer
      - description: 要更新的练习分类数据（JSON格式）
        in: body
        name: body
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新练习分类（仅管理员）
      tags:
      - C语言编程资源
  /api/admin/motivations:
    get:
      consumes:
      - application/json
      description: 获取系统中所有的激励短句（管理员权限）
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取所有激励短句
      tags:
      - 激励短句
    post:
      consumes:
      - application/json
      description: 创建新的激励短句（管理员权限）
      parameters:
      - description: 激励短句内容
        in: body
        name: content
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 创建新的激励短句
      tags:
      - 激励短句
  /api/admin/motivations/{id}:
    delete:
      consumes:
      - application/json
      description: 删除激励短句（管理员权限）
      parameters:
      - description: 激励短句ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 删除激励短句
      tags:
      - 激励短句
    put:
      consumes:
      - application/json
      description: 更新激励短句内容和状态（管理员权限）
      parameters:
      - description: 激励短句ID
        in: path
        name: id
        required: true
        type: integer
      - description: 激励短句信息
        in: body
        name: motivation
        required: true
        schema:
          $ref: '#/definitions/model.Motivation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 更新激励短句
      tags:
      - 激励短句
  /api/admin/motivations/{id}/switch:
    post:
      consumes:
      - application/json
      description: 立即切换到指定的激励短句（管理员权限）
      parameters:
      - description: 激励短句ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 立即切换激励短句
      tags:
      - 激励短句
  /api/admin/questions/{id}:
    put:
      consumes:
      - application/json
      description: 更新指定的练习题题目（需要管理员权限）
      parameters:
      - description: 题目ID
        in: path
        name: id
        required: true
        type: integer
      - description: 练习题题目更新信息
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/model.ExerciseQuestion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新练习题题目
      tags:
      - C语言编程资源
  /api/admin/resources:
    post:
      consumes:
      - multipart/form-data
      description: 上传PDF、视频、文章或工作表到特定模块
      parameters:
      - description: 资源标题
        in: formData
        name: title
        required: true
        type: string
      - description: 资源描述
        in: formData
        name: description
        type: string
      - description: 资源类型（pdf, video, article, worksheet)
        enum:
        - pdf
        - video
        - article
        - worksheet
        in: formData
        name: type
        required: true
        type: string
      - description: 模块类型（pre-class, in-class, post-class)
        enum:
        - pre-class
        - in-class
        - post-class
        in: formData
        name: moduleType
        required: true
        type: string
      - description: 资源文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 上传学习资源（仅管理员）
      tags:
      - 内容
  /api/admin/resources/{id}/articles:
    post:
      consumes:
      - application/json
      description: 为指定资源分类添加新的文章
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      - description: 文章信息
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/model.Resource'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 添加文章到资源分类
      tags:
      - C语言编程资源
  /api/admin/resources/{id}/content:
    get:
      consumes:
      - application/json
      description: 获取指定资源分类的完整内容，包括视频、文章和练习题类目
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取资源分类的完整内容
      tags:
      - C语言编程资源
  /api/admin/resources/{id}/videos:
    post:
      consumes:
      - application/json
      description: 为指定资源分类添加新的视频
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      - description: 视频信息
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/model.Resource'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 添加视频到资源分类
      tags:
      - C语言编程资源
  /api/admin/upload/icon:
    post:
      consumes:
      - multipart/form-data
      description: 专门用于上传C语言编程模块的图标
      parameters:
      - description: 图标文件（PNG或SVG格式）
        in: formData
        name: icon
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: 请求参数错误或文件格式不支持
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 上传模块图标（仅管理员）
      tags:
      - 内容
  /api/admin/upload/video:
    post:
      consumes:
      - multipart/form-data
      description: 专门用于上传视频文件
      parameters:
      - description: 视频文件
        in: formData
        name: video
        required: true
        type: file
      - description: 视频标题
        in: formData
        name: title
        type: string
      - description: 视频描述
        in: formData
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 请求参数错误或文件格式不支持
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 上传视频文件（仅管理员）
      tags:
      - 内容
  /api/admin/upload/video/chunk:
    post:
      consumes:
      - multipart/form-data
      description: 支持大视频文件的分块上传
      parameters:
      - description: 文件分块数据
        in: formData
        name: chunk
        required: true
        type: file
      - description: 当前块序号
        in: formData
        name: chunkNumber
        required: true
        type: integer
      - description: 总块数
        in: formData
        name: totalChunks
        required: true
        type: integer
      - description: 文件唯一标识符
        in: formData
        name: identifier
        required: true
        type: string
      - description: 原始文件名
        in: formData
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 上传视频文件分块（仅管理员）
      tags:
      - 内容
  /api/admin/upload/video/progress/{uploadId}:
    get:
      consumes:
      - application/json
      description: 查询文件上传进度
      parameters:
      - description: 上传标识符
        in: path
        name: uploadId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/util.Response'
        "404":
          description: 上传记录不存在
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 查询视频上传进度（仅管理员）
      tags:
      - 内容
  /api/admin/users:
    get:
      consumes:
      - application/json
      description: 获取用户列表，支持分页和筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页条数
        in: query
        name: pageSize
        type: integer
      - description: 角色筛选
        in: query
        name: role
        type: string
      - description: 状态筛选
        in: query
        name: status
        type: string
      - description: 搜索关键词
        in: query
        name: search
        type: string
      - description: 开始日期
        in: query
        name: startDate
        type: string
      - description: 结束日期
        in: query
        name: endDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.User'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户列表
      tags:
      - 用户管理
  /api/admin/users/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 根据ID获取用户详细信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取单个用户信息
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 更新用户的详细信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户更新信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
      tags:
      - 用户管理
  /api/admin/users/{id}/disable:
    post:
      consumes:
      - application/json
      description: 禁用或启用指定的用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 是否禁用
        in: query
        name: disable
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 禁用/启用用户
      tags:
      - 用户管理
  /api/admin/users/{id}/reset-password:
    post:
      consumes:
      - application/json
      description: 重置用户密码并返回临时密码
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 重置用户密码
      tags:
      - 用户管理
  /api/admin/videos/{id}:
    put:
      consumes:
      - application/json
      description: 更新指定ID的视频内容信息
      parameters:
      - description: 视频ID
        in: path
        name: id
        required: true
        type: integer
      - description: 要更新的视频数据（JSON格式）
        in: body
        name: body
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新视频内容（仅管理员）
      tags:
      - C语言编程资源
  /api/analytics/overview:
    get:
      consumes:
      - application/json
      description: 获取用户的学习分析概览数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取学习分析概览
      tags:
      - 分析
  /api/analytics/progress:
    get:
      consumes:
      - application/json
      description: 获取用户的学习进度数据
      parameters:
      - default: 6
        description: 周数
        in: query
        name: weeks
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取学习进度
      tags:
      - 分析
  /api/analytics/recommendations:
    get:
      consumes:
      - application/json
      description: 获取基于用户学习数据的个性化建议
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取个性化建议
      tags:
      - 分析
  /api/analytics/session/{sessionId}/end:
    post:
      consumes:
      - application/json
      description: 记录用户的学习会话结束
      parameters:
      - description: 会话ID
        in: path
        name: sessionId
        required: true
        type: integer
      - description: 活动数据
        in: body
        name: activity
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 结束学习会话
      tags:
      - 分析
  /api/analytics/session/start:
    post:
      consumes:
      - application/json
      description: 记录用户的学习会话开始
      parameters:
      - description: 模块ID
        in: query
        name: moduleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 记录学习会话
      tags:
      - 分析
  /api/analytics/skills:
    get:
      consumes:
      - application/json
      description: 获取用户的技能评估数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取技能评估
      tags:
      - 分析
  /api/c-programming/categories/{categoryId}/questions:
    get:
      consumes:
      - application/json
      description: 获取指定练习题分类下的所有练习题题目，支持分页
      parameters:
      - description: 分类ID
        in: path
        name: categoryId
        required: true
        type: integer
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 5
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取练习题题目列表
      tags:
      - C语言编程资源
  /api/c-programming/categories/{categoryId}/questions-with-status:
    get:
      consumes:
      - application/json
      description: 获取指定练习题分类下的所有练习题题目，并包含当前用户是否已提交的状态
      parameters:
      - description: 分类ID
        in: path
        name: categoryId
        required: true
        type: integer
      - description: 用户ID
        in: query
        name: user_id
        required: true
        type: integer
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 5
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      summary: 获取带用户状态的练习题题目列表
      tags:
      - C语言编程资源
  /api/c-programming/exercises/users/{userID}/questions/{questionID}/submission:
    get:
      consumes:
      - application/json
      description: 查询指定用户是否已经提交过特定题目的答案
      parameters:
      - description: 用户ID
        in: path
        name: userID
        required: true
        type: integer
      - description: 题目ID
        in: path
        name: questionID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 检查用户是否答过特定题目
      tags:
      - C语言编程资源
  /api/c-programming/resources:
    get:
      consumes:
      - application/json
      description: 获取所有C语言资源分类模块，支持分页和筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 9
        description: 每页数量
        in: query
        name: limit
        type: integer
      - description: 是否启用
        in: query
        name: enabled
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取C语言资源分类列表
      tags:
      - C语言编程资源
  /api/c-programming/resources/{id}:
    get:
      consumes:
      - application/json
      description: 获取单个C语言资源分类模块
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取C语言资源分类详情
      tags:
      - C语言编程资源
  /api/c-programming/resources/{id}/articles:
    get:
      consumes:
      - application/json
      description: 获取指定C语言资源下的所有文章，支持分页
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 5
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取C语言文章资源列表
      tags:
      - C语言编程资源
  /api/c-programming/resources/{id}/categories:
    get:
      consumes:
      - application/json
      description: 获取指定C语言资源下的所有练习题分类
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取练习题分类列表
      tags:
      - C语言编程资源
  /api/c-programming/resources/{id}/videos:
    get:
      consumes:
      - application/json
      description: 获取指定C语言资源下的所有视频，支持分页
      parameters:
      - description: 资源ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 5
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取C语言视频资源列表
      tags:
      - C语言编程资源
  /api/c-programming/resources/full:
    get:
      consumes:
      - application/json
      description: 获取所有C语言资源分类模块，包括每个分类下的视频、文章和练习题类目
      parameters:
      - description: 是否只获取启用的资源分类
        in: query
        name: enabled
        type: boolean
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 9
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取所有C语言资源分类及其完整内容
      tags:
      - C语言编程资源
  /api/c-programming/resources/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传视频、文章等资源文件到指定的C语言资源模块
      parameters:
      - description: 资源模块ID
        in: formData
        name: resource_id
        required: true
        type: integer
      - description: 资源类型(video/article/pdf/worksheet)
        in: formData
        name: type
        required: true
        type: string
      - description: 资源标题
        in: formData
        name: title
        required: true
        type: string
      - description: 资源描述
        in: formData
        name: description
        type: string
      - description: 资源文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 上传C语言编程资源文件
      tags:
      - C语言编程资源
  /api/community/{type}/{id}/upvote:
    post:
      consumes:
      - application/json
      description: 给帖子、评论或回答点赞
      parameters:
      - description: 内容类型
        enum:
        - post
        - comment
        - answer
        in: path
        name: type
        required: true
        type: string
      - description: 内容ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 点赞内容
      tags:
      - 社区
  /api/community/posts:
    get:
      consumes:
      - application/json
      description: 获取社区讨论帖子列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: limit
        type: integer
      - description: 标签筛选
        in: query
        name: tag
        type: string
      - default: new
        description: 排序方式
        enum:
        - new
        - popular
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取讨论帖子
      tags:
      - 社区
    post:
      consumes:
      - application/json
      description: 创建新的讨论帖子
      parameters:
      - description: 帖子内容
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/service.PostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 创建讨论帖子
      tags:
      - 社区
  /api/community/questions:
    get:
      consumes:
      - application/json
      description: 获取问答区问题列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: limit
        type: integer
      - description: 标签筛选
        in: query
        name: tag
        type: string
      - description: 是否已解决
        in: query
        name: solved
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取问题列表
      tags:
      - 社区
    post:
      consumes:
      - application/json
      description: 创建新的问题
      parameters:
      - description: 问题内容
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/service.QuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 创建问题
      tags:
      - 社区
  /api/community/questions/{questionId}/answers:
    post:
      consumes:
      - application/json
      description: 回答一个问题
      parameters:
      - description: 问题ID
        in: path
        name: questionId
        required: true
        type: integer
      - description: 回答内容
        in: body
        name: answer
        required: true
        schema:
          $ref: '#/definitions/service.AnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 回答问题
      tags:
      - 社区
  /api/dashboard:
    get:
      consumes:
      - application/json
      description: 获取用户仪表盘数据，包括今日任务、进度、资源等
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取仪表盘数据
      tags:
      - 仪表盘
  /api/dashboard/tasks/{taskId}:
    patch:
      consumes:
      - application/json
      description: 标记任务为完成或进行中
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: integer
      - description: 任务状态
        in: body
        name: status
        required: true
        schema:
          enum:
          - completed
          - in_progress
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 更新任务状态
      tags:
      - 仪表盘
  /api/dashboard/today-tasks:
    get:
      consumes:
      - application/json
      description: 获取用户今日需要完成的学习任务
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取今日任务
      tags:
      - 仪表盘
  /api/learning/in-class:
    get:
      consumes:
      - application/json
      description: 获取课中学习模块的内容
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取课中学习内容
      tags:
      - 学习模块
  /api/learning/learning-log:
    post:
      consumes:
      - application/json
      description: 提交课后学习日志和反思
      parameters:
      - description: 学习日志内容
        in: body
        name: log
        required: true
        schema:
          $ref: '#/definitions/service.LearningLogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 提交学习日志
      tags:
      - 学习模块
  /api/learning/post-class:
    get:
      consumes:
      - application/json
      description: 获取课后回顾模块的内容
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取课后回顾内容
      tags:
      - 学习模块
  /api/learning/pre-class:
    get:
      consumes:
      - application/json
      description: 获取课前准备模块的内容
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取课前准备内容
      tags:
      - 学习模块
  /api/learning/quiz/{quizId}:
    post:
      consumes:
      - application/json
      description: 提交课后测验答案
      parameters:
      - description: 测验ID
        in: path
        name: quizId
        required: true
        type: integer
      - description: 测验答案
        in: body
        name: answers
        required: true
        schema:
          $ref: '#/definitions/service.QuizSubmission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 提交测验答案
      tags:
      - 学习模块
  /api/login:
    post:
      consumes:
      - application/json
      description: 验证用户身份并返回JWT令牌
      parameters:
      - description: 用户登录凭据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/util.Response'
      summary: 用户登录
      tags:
      - 认证
  /api/motivation:
    get:
      consumes:
      - application/json
      description: 获取当前显示的每日激励短句
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取当前显示的激励短句
      tags:
      - 激励短句
  /api/profile:
    get:
      consumes:
      - application/json
      description: 获取当前已认证用户的个人资料
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户资料
      tags:
      - 认证
  /api/public/c-programming/questions/{questionId}/submit:
    post:
      consumes:
      - application/json
      description: 提交练习题答案，无需权限验证
      parameters:
      - description: 题目ID
        in: path
        name: questionId
        required: true
        type: integer
      - description: 答案内容
        in: body
        name: answer
        required: true
        schema:
          $ref: '#/definitions/service.SubmitExerciseAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      summary: 提交练习题答案（公开接口）
      tags:
      - C语言编程资源
  /api/register:
    post:
      consumes:
      - application/json
      description: 使用提供的信息注册新用户
      parameters:
      - description: 用户注册信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "409":
          description: 邮箱已被注册
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      summary: 注册新用户
      tags:
      - 认证
  /api/resources:
    get:
      consumes:
      - application/json
      description: 获取特定模块类型的资源列表
      parameters:
      - description: 模块类型（pre-class, in-class, post-class)
        enum:
        - pre-class
        - in-class
        - post-class
        in: query
        name: moduleType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Resource'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - ApiKeyAuth: []
      summary: 按模块类型获取资源
      tags:
      - 内容
  /api/users/{id}/points:
    post:
      consumes:
      - application/json
      description: 根据用户ID更新积分，可为正可为负
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 要增加的积分数量（可为负数）
        in: query
        name: points
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/util.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/util.Response'
      summary: 更新用户积分
      tags:
      - 更新用户积分
  /health:
    get:
      description: 检查服务状态
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      summary: 健康检查
      tags:
      - 系统
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
